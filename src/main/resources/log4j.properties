#定义输出级别和输出平台
#所有日志以DEBUG级别控制台Console方式输出
#log4j.rootLogger = [ level ] , appenderName, appenderName, …
#level 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。
#Log4j建议只使用四个级别，优 先级从高到低分别是ERROR、WARN、INFO、DEBUG。
#通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。
#比如在这里定 义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来。
log4j.rootLogger=DEBUG, Console
     
#Console 
##输出到控制台     
log4j.appender.Console=org.apache.log4j.ConsoleAppender 
##设置输出样式    
log4j.appender.Console.layout=org.apache.log4j.PatternLayout  
##自定义输出样式 默认:yyyy-mm-dd hh:mm:ss,SSS 级别(注:-5的意思是 对齐,如果级别少于5个字符用空格填充) [所属类的全名(包括包名),加数字1代表只留最后一个名比如a.b.c留c] - 输出代码中指定的讯息，如log(message)中的message 输出一个换行符号
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{1}] - %m%n
  
###显示mybatis的SQL语句部分，类似于hibernate在控制台打印sql语句那部分
log4j.logger.java.sql.ResultSet=INFO    
log4j.logger.org.apache=INFO    
log4j.logger.java.sql.Connection=DEBUG    
log4j.logger.java.sql.Statement=DEBUG    
log4j.logger.java.sql.PreparedStatement=DEBUG