<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

  <display-name>SIMS</display-name>
	<welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  	</welcome-file-list>

	<!--
		DispatcherServlet是前端控制器设计模式的实现，提供Spring Web MVC的集中访问点，而且负责职责的分派，主要负责流程的控制。
		对应的是 controller 级别的配置，作用范围是控制层上下文。
	-->
	<servlet>
		<servlet-name>mvc</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-*.xml</param-value>
		 </init-param>
		 <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		 <servlet-name>mvc</servlet-name>
		 <url-pattern>*.do</url-pattern><!--url-pattern ：表示哪些请求交给Spring Web MVC处理。-->
	</servlet-mapping>

	<!-- 编码过滤器 -->
	<filter>
		 <filter-name>encodingFilter</filter-name>
		 <filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		 </filter-class>
		 <init-param>
			 <param-name>encoding</param-name>
			 <param-value>UTF-8</param-value>
		 </init-param>
	</filter>
	<filter-mapping>
		 <filter-name>encodingFilter</filter-name>
		 <url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 加载Log4J 配置文件  -->
	<context-param>
		 <param-name>log4jConfigLocation</param-name>
		 <param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!--
		Spring通过org.springframework.web.util.WebAppRootListener 这个监听器来运行时的项目路径。
		但是如果在web.xml中已经配置了 org.springframework.web.util.Log4jConfigListener这个监听器，
		则不需要配置WebAppRootListener了。因为Log4jConfigListener已经包含了WebAppRootListener的功能
	-->
	<listener>
		 <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

</web-app>